<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NATS on Mooner</title>
    <link>https://palza4dev.github.io/series/nats/</link>
    <description>Recent content in NATS on Mooner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Apr 2022 18:24:08 +0900</lastBuildDate><atom:link href="https://palza4dev.github.io/series/nats/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nats1</title>
      <link>https://palza4dev.github.io/post/nats1/</link>
      <pubDate>Fri, 08 Apr 2022 18:24:08 +0900</pubDate>
      
      <guid>https://palza4dev.github.io/post/nats1/</guid>
      <description>Desc Text.</description>
      <content:encoded><![CDATA[<h3 id="nats-개요">NATS 개요</h3>
<ul>
<li>분산형 시스템을 위한 연결 기술 → “Message oriented middleware”</li>
<li>메시지 주소지정, 검색, 교환 등의 기능</li>
<li>질문과 답변, 명령문 작성과 실행, 스트림 프로세스 처리 등에 사용</li>
</ul>
<h3 id="nats-특징">NATS 특징</h3>
<ul>
<li>손쉬운 다대다 연결
<ul>
<li>hostname이나 port가 아니라 subject 기준으로 관리한다.</li>
<li>load balancers, log systems 부터 proxies and sidecars 까지 1:1 연결에는 한계가 있다.</li>
</ul>
</li>
<li>배포 용이성
<ul>
<li>VM, container, K8S, device 등 어느 환경에서도 배포 가능</li>
</ul>
</li>
<li>안전성
<ul>
<li>보안을 위한 네트워크 경계 지정을 안해도 될 만큼 안전함</li>
</ul>
</li>
<li>높은 확장성, 하이브리드 배포, 적응성</li>
<li><strong>Use Cases</strong>
<ul>
<li>Cloud Messaging
<ul>
<li>Services (microservices, service mesh)</li>
<li>Event/Data Streaming (observability, analytics, ML/AI)</li>
</ul>
</li>
<li>Command and Control
<ul>
<li>IoT and Edge</li>
<li>Telemetry / Sensor Data / Command and Control</li>
</ul>
</li>
<li>레거시 메시징 시스템의 확장 및 교체</li>
</ul>
</li>
</ul>
<h3 id="nats란">NATS란?</h3>
<ul>
<li><strong>NATS Client Applications</strong>
<ul>
<li>NATS 클라이언트 라이브러리를 사용해 다른 app과 pub&amp;sub, 요청&amp;응답을 수행할 수 있다.</li>
<li>NATS 서버 관점에선 클라이언트인 것이다.</li>
</ul>
</li>
<li><strong>NATS client와 NATS server 연결하기</strong>
<ul>
<li>연결하기 위한 config
<ul>
<li>NATS 서버의 URL</li>
<li>Authentication(필요시) : Token, TLS, user/pass 등 다양한 방식</li>
</ul>
</li>
</ul>
</li>
<li><strong>Simple messaging design</strong>
<ul>
<li>메시지는 subject에 의해 주소 지정되고 식별된다. (네트워크 위치와 무관)</li>
<li>퍼블리셔는 데이터를 인코딩해 전달하며 구독자는 받아서 디코딩한다.</li>
</ul>
</li>
<li><strong>Quality of Service (메시지 품질 관리)</strong>
<ul>
<li>Core만 사용하는지, JetStream도 사용하는지에 따라 다르다.</li>
<li><strong>Core NATS → At most once QoS(최대 한번)</strong>
<ul>
<li>구독자가 Topic에 연결된 상태라면 메시지가 수신되지만 그렇지 않은 경우 (나중에) 메시지를 수신 할 수 없다.</li>
<li>TCP/IP 수준의 보증이다.</li>
<li>fire-and-forget 메시징 시스템으로 메모리에만 저장하고 disk 저장안함</li>
</ul>
</li>
<li><strong>NATS JetStream → At-least(한번이상) / exactly once(정확히 한번)</strong>
<ul>
<li>최소 한번 또는 정확하게 한번 → 메시지에 대한 더 높은 품질이 필요할때</li>
<li>지속적인 스트리밍, 플로우 제어, 키-값 스토어 등 기능이 필요할때</li>
<li>(JetStream은 NATS 서버에 내장되어 있음)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="subject-based-messaging">Subject-Based Messaging</h3>
<ul>
<li><strong>Subject란?</strong>
<ul>
<li>publisher와 subscriber가 서로를 찾을 수 있게 해주는 문자열 (주소 식별)</li>
<li>메시지를 스트림 혹은 토픽으로 분류해준다.</li>
<li>알파벳 대소문자, <code>.</code> , <code>*</code> , <code>&gt;</code> 사용 가능</li>
<li><code>.</code> 으로 계층 표현, <code>*</code> 은 싱글 토큰 매칭, <code>&gt;</code> 은 멀티플 토큰 매칭</li>
</ul>
</li>
</ul>
<h3 id="core-nats">Core NATS</h3>
<ul>
<li><strong>Publish-Subscribe (일대다 통신)</strong>
<ul>
<li>publisher는 subject에 메시지를 송신</li>
<li>해당 subject를 리스닝하고 있는 subscriber는 액티브하게 메시지를 수신</li>
<li>메시지 구성 (기본 1MB, 최대 64MB, 적정최대 8MB)
<ol>
<li>A subject.</li>
<li>A payload in the form of a byte array.</li>
<li>Any number of header fields.</li>
<li>An optional &lsquo;reply&rsquo; address field.</li>
</ol>
</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
